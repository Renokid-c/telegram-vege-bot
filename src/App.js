import React, { useState } from 'react';

// –ò–∫–æ–Ω–∫–∏ –∏–∑ lucide-react
// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: npm install lucide-react –∏–ª–∏ yarn add lucide-react
import { ShoppingCart, XCircle, Package, User, Phone, MapPin, NotebookPen, Plus, Minus } from 'lucide-react';

// –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export default function App() {
  // –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (—Ñ—Ä—É–∫—Ç—ã –∏ –æ–≤–æ—â–∏)
  // –¶–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –∑–∞ 1 –∫–≥ –∏–ª–∏ –∑–∞ –ø—É—á–æ–∫ (–¥–ª—è –∑–µ–ª–µ–Ω–∏)
  const [products] = useState([
    { id: 1, name: '–Ø–±–ª–æ–∫–æ', price: 300, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçé', unit: '–∫–≥' },
    { id: 2, name: '–ê–±—Ä–∏–∫–æ—Å', price: 240, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ÔøΩ', unit: '–∫–≥' },
    { id: 3, name: '–ê–≤–æ–∫–∞–¥–æ', price: 500, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü•ë', unit: '–∫–≥' },
    { id: 4, name: '–ë–∞–Ω–∞–Ω', price: 200, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçå', unit: '–∫–≥' },
    { id: 5, name: '–ö–æ–∫–æ—Å', price: 600, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü••', unit: '–∫–≥' },
    { id: 6, name: '–ò–Ω–∂–∏—Ä', price: 360, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü´ê', unit: '–∫–≥' },
    { id: 7, name: '–ö–∏–≤–∏', price: 320, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü•ù', unit: '–∫–≥' },
    { id: 8, name: '–õ–∏–º–æ–Ω', price: 180, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçã', unit: '–∫–≥' },
    { id: 9, name: '–õ–∞–π–º', price: 220, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üü¢', unit: '–∫–≥' },
    { id: 10, name: '–ú–∞–Ω–≥–æ', price: 560, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü•≠', unit: '–∫–≥' },
    { id: 11, name: '–ê–ø–µ–ª—å—Å–∏–Ω', price: 260, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçä', unit: '–∫–≥' },
    { id: 12, name: '–ü–µ—Ä—Å–∏–∫', price: 340, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçë', unit: '–∫–≥' },
    { id: 13, name: '–ì—Ä—É—à–∞', price: 280, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçê', unit: '–∫–≥' },
    { id: 14, name: '–ê–Ω–∞–Ω–∞—Å', price: 440, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçç', unit: '–∫–≥' },
    { id: 15, name: '–°–ª–∏–≤–∞', price: 230, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üü£', unit: '–∫–≥' },
    { id: 16, name: '–ì—Ä–µ–π–ø—Ñ—Ä—É—Ç', price: 330, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçä', unit: '–∫–≥' },
    { id: 17, name: '–î—ã–Ω—è', price: 380, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçà', unit: '–∫–≥' },
    { id: 18, name: '–ì—Ä–∞–Ω–∞—Ç', price: 420, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üî¥', unit: '–∫–≥' },
    { id: 19, name: '–•—É—Ä–º–∞', price: 390, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üü†', unit: '–∫–≥' },
    { id: 20, name: '–ú–∞–Ω–¥–∞—Ä–∏–Ω', price: 250, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçä', unit: '–∫–≥' },
    { id: 21, name: '–ê—Ä–±—É–∑', price: 460, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçâ', unit: '–∫–≥' },
    { id: 22, name: '–ö–ª—É–±–Ω–∏–∫–∞', price: 480, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçì', unit: '–∫–≥' },
    { id: 23, name: '–ú–∞–ª–∏–Ω–∞', price: 520, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçì', unit: '–∫–≥' },
    { id: 24, name: '–í–∏–Ω–æ–≥—Ä–∞–¥', price: 400, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçá', unit: '–∫–≥' },
    { id: 25, name: '–í–∏—à–Ω—è/–ß–µ—Ä–µ—à–Ω—è', price: 540, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'üçí', unit: '–∫–≥' },
    { id: 61, name: '–ï–∂–µ–≤–∏–∫–∞', price: 500, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü´ê', unit: '–∫–≥' },
    { id: 62, name: '–ì–æ–ª—É–±–∏–∫–∞', price: 540, category: '–§—Ä—É–∫—Ç—ã', imageUrl: 'ü´ê', unit: '–∫–≥' },

    { id: 26, name: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å', price: 140, category: '–û–≤–æ—â–∏', imageUrl: 'ü•î', unit: '–∫–≥' },
    { id: 27, name: '–ü–æ–º–∏–¥–æ—Ä', price: 360, category: '–û–≤–æ—â–∏', imageUrl: 'üçÖ', unit: '–∫–≥' },
    { id: 28, name: '–ú–æ—Ä–∫–æ–≤—å', price: 160, category: '–û–≤–æ—â–∏', imageUrl: 'ü•ï', unit: '–∫–≥' },
    { id: 29, name: '–ö–∞–ø—É—Å—Ç–∞', price: 190, category: '–û–≤–æ—â–∏', imageUrl: 'ü•¨', unit: '–∫–≥' },
    { id: 30, name: '–ü–µ—Ä–µ—Ü', price: 280, category: '–û–≤–æ—â–∏', imageUrl: 'üå∂Ô∏è', unit: '–∫–≥' },
    { id: 31, name: '–ë–∞–∫–ª–∞–∂–∞–Ω', price: 320, category: '–û–≤–æ—â–∏', imageUrl: 'üçÜ', unit: '–∫–≥' },
    { id: 32, name: '–¶–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞', price: 270, category: '–û–≤–æ—â–∏', imageUrl: 'ü•¶', unit: '–∫–≥' },
    { id: 33, name: '–õ—É–∫', price: 120, category: '–û–≤–æ—â–∏', imageUrl: 'üßÖ', unit: '–∫–≥' },
    { id: 34, name: '–ß–µ—Å–Ω–æ–∫', price: 220, category: '–û–≤–æ—â–∏', imageUrl: 'üßÑ', unit: '–∫–≥' },
    { id: 37, name: '–†–µ–¥–∏—Å–∫–∞', price: 170, category: '–û–≤–æ—â–∏', imageUrl: '‚ö™', unit: '–∫–≥' },
    { id: 38, name: '–û–≥—É—Ä–µ—Ü', price: 180, category: '–û–≤–æ—â–∏', imageUrl: 'ü•í', unit: '–∫–≥' },
    { id: 39, name: '–¢—ã–∫–≤–∞', price: 300, category: '–û–≤–æ—â–∏', imageUrl: 'üéÉ', unit: '–∫–≥' },
    { id: 40, name: '–ö–∞–±–∞—á–æ–∫', price: 240, category: '–û–≤–æ—â–∏', imageUrl: 'ü•í', unit: '–∫–≥' },
    { id: 41, name: '–ì–æ—Ä–æ—Ö', price: 130, category: '–û–≤–æ—â–∏', imageUrl: 'ü´õ', unit: '–∫–≥' },
    { id: 43, name: '–ë—Ä–æ–∫–∫–æ–ª–∏', price: 260, category: '–û–≤–æ—â–∏', imageUrl: 'ü•¶', unit: '–∫–≥' },
    { id: 44, name: '–ö—É–∫—É—Ä—É–∑–∞', price: 200, category: '–û–≤–æ—â–∏', imageUrl: 'üåΩ', unit: '–∫–≥' },
    { id: 46, name: '–°–≤–µ–∫–ª–∞', price: 160, category: '–û–≤–æ—â–∏', imageUrl: 'üî¥', unit: '–∫–≥' },
    { id: 55, name: '–†–µ–¥—å–∫–∞', price: 180, category: '–û–≤–æ—â–∏', imageUrl: '‚ö™', unit: '–∫–≥' },
    { id: 56, name: '–ù—É—Ç', price: 220, category: '–û–≤–æ—â–∏', imageUrl: 'ü´ò', unit: '–∫–≥' },
    { id: 57, name: '–ß–µ—á–µ–≤–∏—Ü–∞', price: 210, category: '–û–≤–æ—â–∏', imageUrl: 'ü´ò', unit: '–∫–≥' },
    { id: 58, name: '–°–ª–∞–¥–∫–∏–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å', price: 180, category: '–û–≤–æ—â–∏', imageUrl: 'üç†', unit: '–∫–≥' },
    { id: 59, name: '–ë–∞—Ç–∞—Ç', price: 190, category: '–û–≤–æ—â–∏', imageUrl: 'üç†', unit: '–∫–≥' },
    { id: 60, name: '–ò–º–±–∏—Ä—å', price: 360, category: '–û–≤–æ—â–∏', imageUrl: 'ü´ö', unit: '–∫–≥' },

    { id: 35, name: '–ü–µ—Ç—Ä—É—à–∫–∞', price: 25, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
    { id: 36, name: '–°–µ–ª—å–¥–µ—Ä–µ–π', price: 40, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üå±', unit: '–ø—É—á–æ–∫' },
    { id: 42, name: '–ó–µ–ª–µ–Ω—ã–π –ª—É–∫', price: 30, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üßÖ', unit: '–ø—É—á–æ–∫' },
    { id: 45, name: '–®–ø–∏–Ω–∞—Ç', price: 50, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üçÉ', unit: '–ø—É—á–æ–∫' },
    { id: 47, name: '–£–∫—Ä–æ–ø', price: 25, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
    { id: 48, name: '–ö–∏–Ω–∑–∞', price: 30, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
    { id: 49, name: '–°–∞–ª–∞—Ç', price: 50, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'ü•¨', unit: '–ø—É—á–æ–∫' },
    { id: 50, name: '–†—É–∫–∫–æ–ª–∞', price: 60, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'ü•¨', unit: '–ø—É—á–æ–∫' },
    { id: 51, name: '–ë–∞–∑–∏–ª–∏–∫', price: 60, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
    { id: 52, name: '–©–∞–≤–µ–ª—å', price: 40, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
    { id: 53, name: '–¢–∏–º—å—è–Ω', price: 50, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
    { id: 54, name: '–ú—è—Ç–∞', price: 40, category: '–ó–µ–ª–µ–Ω—å', imageUrl: 'üåø', unit: '–ø—É—á–æ–∫' },
  ]);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
  const [cart, setCart] = useState([]);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
  const [isCartOpen, setIsCartOpen] = useState(false);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
  const [isOrderFormOpen, setIsOrderFormOpen] = useState(false);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ
  const [orderMessage, setOrderMessage] = useState('');
  // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
  const [orderFormData, setOrderFormData] = useState({
    name: '',
    phone: '',
    address: '',
    notes: '', // –ü–æ–ª–µ –¥–ª—è –ø—Ä–∏–º–µ—á–∞–Ω–∏–π
  });
  // –û—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã
  const [formErrors, setFormErrors] = useState({});
  // –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ'); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ "–î–æ–±–∞–≤–ª–µ–Ω–æ!"
  const [addedToCartFeedback, setAddedToCartFeedback] = useState({});
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  const [searchQuery, setSearchQuery] = useState('');
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ
  const [tempProductQuantities, setTempProductQuantities] = useState({});


  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏
  const addItemToCartFromCard = (product) => {
    const quantityToAdd = tempProductQuantities[product.id] || (product.unit === '–ø—É—á–æ–∫' ? 1 : 0.5); // Use temp quantity or default
    if (quantityToAdd <= 0) return; // Don't add if quantity is 0

    setCart((prevCart) => {
      const existingItem = prevCart.find((item) => item.id === product.id);
      if (existingItem) {
        return prevCart.map((item) =>
          item.id === product.id ? { ...item, quantity: item.quantity + quantityToAdd } : item
        );
      } else {
        return [...prevCart, { ...product, quantity: quantityToAdd }];
      }
    });

    // Reset temp quantity for this product after adding to cart
    setTempProductQuantities((prev) => ({ ...prev, [product.id]: 0 }));

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å "–î–æ–±–∞–≤–ª–µ–Ω–æ!"
    setAddedToCartFeedback((prev) => ({ ...prev, [product.id]: true }));
    setTimeout(() => {
      setAddedToCartFeedback((prev) => ({ ...prev, [product.id]: false }));
    }, 1500);
  };


  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –ø—Ä–æ–¥—É–∫—Ç–∞
  const incrementProductQuantity = (productId, unit) => {
    setTempProductQuantities((prev) => {
      const currentQuantity = prev[productId] || 0;
      return {
        ...prev,
        [productId]: currentQuantity + (unit === '–ø—É—á–æ–∫' ? 1 : 0.5),
      };
    });
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –ø—Ä–æ–¥—É–∫—Ç–∞
  const decrementProductQuantity = (productId, unit) => {
    setTempProductQuantities((prev) => {
      const currentQuantity = prev[productId] || 0;
      // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 1 –¥–ª—è –ø—É—á–∫–∞, 0.5 –¥–ª—è –∫–≥
      const minQuantity = unit === '–ø—É—á–æ–∫' ? 1 : 0.5;
      // –£–º–µ–Ω—å—à–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ
      return {
        ...prev,
        [productId]: Math.max(minQuantity, currentQuantity - (unit === '–ø—É—á–æ–∫' ? 1 : 0.5)),
      };
    });
  };

  // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (–≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∫–æ—Ä–∑–∏–Ω—ã)
  const removeFromCart = (productId) => {
    setCart((prevCart) => prevCart.filter((item) => item.id !== productId));
  };

  // –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ (–≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∫–æ—Ä–∑–∏–Ω—ã)
  const updateCartQuantity = (productId, newQuantity) => {
    setCart((prevCart) =>
      prevCart.map((item) => {
        if (item.id === productId) {
          const minQuantity = item.unit === '–ø—É—á–æ–∫' ? 1 : 0.5;
          return { ...item, quantity: Math.max(minQuantity, newQuantity) };
        }
        return item;
      })
    );
  };

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ—Ä–∑–∏–Ω—ã
  const getTotalPrice = () => {
    return cart.reduce((total, item) => total + item.price * item.quantity, 0);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ñ–æ—Ä–º–µ –∑–∞–∫–∞–∑–∞
  const proceedToOrderForm = () => {
    if (cart.length === 0) {
      setOrderMessage('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.');
      return;
    }
    setIsCartOpen(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    setIsOrderFormOpen(true); // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞
    setFormErrors({}); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º—É
  const handleFormChange = (e) => {
    const { name, value } = e.target;
    setOrderFormData((prevData) => ({ ...prevData, [name]: value }));
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
  const submitOrder = () => {
    const errors = {};
    if (!orderFormData.name.trim()) {
      errors.name = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.';
    }
    if (!orderFormData.phone.trim()) {
      errors.phone = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.';
    }
    if (!orderFormData.address.trim()) {
      errors.address = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏.';
    }

    if (Object.keys(errors).length > 0) {
      setFormErrors(errors);
      return;
    }

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log('–û—Ñ–æ—Ä–º–ª–µ–Ω –∑–∞–∫–∞–∑:', {
      items: cart,
      totalPrice: getTotalPrice(),
      customerInfo: orderFormData,
    });

    setOrderMessage('–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    setCart([]); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    setOrderFormData({ name: '', phone: '', address: '', notes: '' }); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É, –≤–∫–ª—é—á–∞—è –ø—Ä–∏–º–µ—á–∞–Ω–∏—è
    setIsOrderFormOpen(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredProducts = products.filter(product => {
    const matchesCategory = selectedCategory === '–í—Å–µ' || product.category === selectedCategory;
    const matchesSearch = product.name.toLowerCase().includes(searchQuery.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü –≤ –∫–æ—Ä–∑–∏–Ω–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const totalCartUnits = cart.reduce((total, item) => total + item.quantity, 0);

  return (
    <div className="min-h-screen bg-gray-50 font-sans text-gray-800 flex flex-col items-center p-4 pb-20 sm:p-6 sm:pb-24 md:p-8 md:pb-28"> {/* Added padding-bottom for fixed button */}
      {/* –®–∞–ø–∫–∞ */}
      <header className="w-full max-w-4xl bg-green-700 shadow-xl rounded-b-xl p-4 sm:p-6 mb-6 sm:mb-8 flex justify-between items-center transform -translate-y-2">
        <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold text-green-300 font-['Inter'] drop-shadow-lg">
          –û–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã üåø
        </h1>
        <button
          onClick={() => setIsCartOpen(true)}
          className="relative p-2 sm:p-3 bg-green-300 text-green-800 rounded-full shadow-md hover:bg-green-400 transition duration-300 transform hover:scale-110"
        >
          <ShoppingCart size={20} />
          {totalCartUnits > 0 && (
            <span className="absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-0.5 sm:px-2.5 sm:py-1.5 text-xs sm:text-sm font-extrabold leading-none text-white bg-red-600 rounded-full">
              {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü (–∫–≥ –∏–ª–∏ –ø—É—á–∫–∏) */}
              {totalCartUnits.toFixed(1).replace(/\.0$/, '')} –µ–¥.
            </span>
          )}
        </button>
      </header>

      {/* –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
      <div className="w-full max-w-4xl flex flex-wrap justify-center space-x-1 sm:space-x-2 md:space-x-4 mb-6 sm:mb-8">
        {['–í—Å–µ', '–§—Ä—É–∫—Ç—ã', '–û–≤–æ—â–∏', '–ó–µ–ª–µ–Ω—å'].map(category => (
          <button
            key={category}
            onClick={() => setSelectedCategory(category)}
            className={`py-2 px-4 sm:px-6 rounded-full text-sm sm:text-base font-semibold transition duration-300 transform hover:scale-105 mb-2
              ${selectedCategory === category ? 'bg-green-600 text-white shadow-md' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}
          >
            {category}
          </button>
        ))}
      </div>

      {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ */}
      <div className="w-full max-w-md mb-8 px-4 sm:px-0">
        <input
          type="text"
          placeholder="–ù–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="w-full p-3 rounded-lg border-2 border-gray-300 focus:outline-none focus:border-green-500 transition duration-200 text-lg"
        />
      </div>

      {/* –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
      <main className="w-full max-w-4xl grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 sm:gap-6 mb-8">
        {filteredProducts.map((product) => (
          <div
            key={product.id}
            className="bg-white rounded-xl shadow-lg p-4 sm:p-6 flex flex-col items-center text-center transform hover:scale-105 transition duration-300 border-4 border-green-400 relative overflow-hidden group"
          >
            {/* Overlay –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ */}
            <div className="absolute inset-0 bg-green-500 opacity-0 group-hover:opacity-10 transition-opacity duration-300 pointer-events-none"></div>

            <div className="text-5xl sm:text-6xl mb-3 sm:mb-4 transform group-hover:scale-110 transition-transform duration-300">{product.imageUrl}</div>
            <h2 className="text-xl sm:text-2xl font-extrabold mb-1 sm:mb-2 text-gray-900">{product.name}</h2>
            <p className="text-xl sm:text-2xl font-black text-green-600 mb-3 sm:mb-4">{product.price} —Å–æ–º/{product.unit}</p>

            {/* –ö–Ω–æ–ø–∫–∏ +/- –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞ */}
            <div className="flex items-center justify-center space-x-2 mb-4">
              <button
                onClick={() => decrementProductQuantity(product.id, product.unit)}
                className="p-2 rounded-full bg-green-200 text-green-800 hover:bg-green-300 transition duration-300 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
              >
                <Minus size={20} />
              </button>
              <span className="text-lg font-bold w-16 text-center">
                {tempProductQuantities[product.id] === undefined || tempProductQuantities[product.id] === 0
                  ? (product.unit === '–ø—É—á–æ–∫' ? '0 –ø—É—á.' : '0.0 –∫–≥')
                  : `${tempProductQuantities[product.id].toFixed(product.unit === '–ø—É—á–æ–∫' ? 0 : 1)} ${product.unit}`}
              </span>
              <button
                onClick={() => incrementProductQuantity(product.id, product.unit)}
                className="p-2 rounded-full bg-green-200 text-green-800 hover:bg-green-300 transition duration-300 focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-75"
              >
                <Plus size={20} />
              </button>
            </div>

            <button
              onClick={() => addItemToCartFromCard(product)}
              className="w-full py-2 sm:py-3 px-3 sm:px-4 bg-green-500 text-white font-bold rounded-lg shadow-md hover:bg-green-600 transition duration-300 flex items-center justify-center border-b-4 border-green-700 active:border-b-0 active:translate-y-1 text-base sm:text-lg"
            >
              {addedToCartFeedback[product.id] ? (
                <span className="flex items-center text-base sm:text-lg">–î–æ–±–∞–≤–ª–µ–Ω–æ! üéâ</span>
              ) : (
                <>
                  –í –∫–æ—Ä–∑–∏–Ω—É <ShoppingCart size={18} className="ml-1 sm:ml-2" />
                </>
              )}
            </button>
          </div>
        ))}
      </main>

      {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ó–∞–∫–∞–∑–∞—Ç—å" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ */}
      {cart.length > 0 && (
        <button
          onClick={() => setIsCartOpen(true)}
          className="fixed bottom-4 left-1/2 -translate-x-1/2 w-11/12 max-w-sm py-3 sm:py-4 bg-yellow-500 text-green-800 font-black rounded-full shadow-lg hover:bg-yellow-600 transition duration-300 transform hover:scale-105 flex items-center justify-center text-lg sm:text-xl border-b-4 border-yellow-700 active:border-b-0 active:translate-y-1 z-30"
        >
          –ó–∞–∫–∞–∑–∞—Ç—å: {getTotalPrice()} —Å–æ–º <ShoppingCart size={24} className="ml-2" />
        </button>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ */}
      {orderMessage && (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50 p-4">
          <div className="bg-white p-6 sm:p-8 rounded-xl shadow-2xl text-center max-w-sm sm:max-w-md w-full animate-fade-in-up border-4 border-green-700">
            <h3 className="text-2xl sm:text-3xl font-bold text-green-700 mb-4">–°—Ç–∞—Ç—É—Å –ó–∞–∫–∞–∑–∞</h3>
            <p className="text-base sm:text-lg text-gray-700 mb-6">{orderMessage}</p>
            <button
              onClick={() => setOrderMessage('')}
              className="py-2 sm:py-3 px-6 sm:px-8 bg-green-600 text-white font-bold rounded-lg shadow-lg hover:bg-green-700 transition duration-300 transform hover:scale-105 text-base sm:text-lg"
            >
              –û–ö
            </button>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã */}
      {isCartOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-40 p-4">
          <div className="bg-white p-4 sm:p-6 rounded-xl shadow-2xl max-w-sm sm:max-w-lg w-full max-h-[90vh] overflow-y-auto animate-slide-in-right relative border-4 border-green-400">
            <button
              onClick={() => setIsCartOpen(false)}
              className="absolute top-2 right-2 sm:top-3 sm:right-3 p-1 sm:p-2 rounded-full hover:bg-gray-100 transition duration-200 text-green-700"
            >
              <XCircle size={24} />
            </button>
            <h2 className="text-2xl sm:text-3xl font-bold text-green-700 mb-4 sm:mb-6 border-b-4 border-green-200 pb-2 sm:pb-3">–í–∞—à–∞ –ö–æ—Ä–∑–∏–Ω–∞</h2>

            {cart.length === 0 ? (
              <p className="text-base sm:text-xl text-gray-500 text-center py-6 sm:py-8">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!</p>
            ) : (
              <>
                <ul className="space-y-3 sm:space-y-4 mb-4 sm:mb-6">
                  {cart.map((item) => (
                    <li key={item.id} className="flex justify-between items-center border-b border-gray-200 pb-2">
                      <div className="flex items-center flex-grow">
                        <span className="text-3xl sm:text-4xl mr-2 sm:mr-3">{item.imageUrl}</span>
                        <div>
                          <p className="font-bold text-base sm:text-lg">{item.name}</p>
                          <p className="text-xs sm:text-sm text-gray-600">{item.price} —Å–æ–º/{item.unit}</p>
                        </div>
                      </div>
                      <div className="flex items-center">
                        <button
                          onClick={() => updateCartQuantity(item.id, item.quantity - (item.unit === '–ø—É—á–æ–∫' ? 1 : 0.5))}
                          className="px-2 sm:px-3 py-0.5 sm:py-1 bg-gray-200 rounded-md hover:bg-gray-300 transition duration-200 text-base sm:text-lg font-bold"
                        >
                          -
                        </button>
                        <span className="mx-1 sm:mx-2 w-14 sm:w-16 text-center border-2 border-gray-300 rounded-md py-0.5 sm:py-1 font-semibold text-sm sm:text-base">
                            {item.quantity.toFixed(item.unit === '–ø—É—á–æ–∫' ? 0 : 1)} {item.unit}
                        </span>
                        <button
                          onClick={() => updateCartQuantity(item.id, item.quantity + (item.unit === '–ø—É—á–æ–∫' ? 1 : 0.5))}
                          className="px-2 sm:px-3 py-0.5 sm:py-1 bg-gray-200 rounded-md hover:bg-gray-300 transition duration-200 text-base sm:text-lg font-bold"
                        >
                          +
                        </button>
                        <button
                          onClick={() => removeFromCart(item.id)}
                          className="ml-2 sm:ml-4 p-0.5 sm:p-1 text-red-500 hover:text-red-700 transition duration-200"
                        >
                          <XCircle size={20} />
                        </button>
                      </div>
                    </li>
                  ))}
                </ul>

                <div className="text-right text-2xl sm:text-3xl font-black text-green-800 mb-4 sm:mb-6 pt-2 sm:pt-4 border-t-4 border-green-200">
                  –ò—Ç–æ–≥–æ: {getTotalPrice()} —Å–æ–º
                </div>

                <button
                  onClick={proceedToOrderForm}
                  className="w-full py-3 sm:py-4 bg-green-600 text-white font-black rounded-lg shadow-lg hover:bg-green-700 transition duration-300 flex items-center justify-center text-lg sm:text-xl border-b-4 border-green-800 active:border-b-0 active:translate-y-1"
                >
                  –û—Ñ–æ—Ä–º–∏—Ç—å –ó–∞–∫–∞–∑ <Package size={20} className="ml-1 sm:ml-2" />
                </button>
              </>
            )}
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞ */}
      {isOrderFormOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-40 p-4">
          <div className="bg-white p-6 sm:p-8 rounded-xl shadow-2xl max-w-sm sm:max-w-md w-full animate-fade-in-up relative border-4 border-green-400">
            <button
              onClick={() => setIsOrderFormOpen(false)}
              className="absolute top-2 right-2 sm:top-3 sm:right-3 p-1 sm:p-2 rounded-full hover:bg-gray-100 transition duration-200 text-green-700"
            >
              <XCircle size={24} />
            </button>
            <h2 className="text-2xl sm:text-3xl font-bold text-green-700 mb-4 sm:mb-6 text-center">–î–∞–Ω–Ω—ã–µ –¥–ª—è –î–æ—Å—Ç–∞–≤–∫–∏</h2>

            <div className="space-y-3 sm:space-y-4">
              <div className="relative">
                <User className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={18} />
                <input
                  type="text"
                  name="name"
                  placeholder="–í–∞—à–µ –∏–º—è"
                  value={orderFormData.name}
                  onChange={handleFormChange}
                  className={`w-full pl-10 pr-4 py-2 sm:py-3 rounded-lg border-2 text-base sm:text-lg ${formErrors.name ? 'border-red-500' : 'border-gray-300'} focus:outline-none focus:border-green-500 transition duration-200`}
                />
                {formErrors.name && <p className="text-red-500 text-xs sm:text-sm mt-1">{formErrors.name}</p>}
              </div>

              <div className="relative">
                <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={18} />
                <input
                  type="tel"
                  name="phone"
                  placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  value={orderFormData.phone}
                  onChange={handleFormChange}
                  className={`w-full pl-10 pr-4 py-2 sm:py-3 rounded-lg border-2 text-base sm:text-lg ${formErrors.phone ? 'border-red-500' : 'border-gray-300'} focus:outline-none focus:border-green-500 transition duration-200`}
                />
                {formErrors.phone && <p className="text-red-500 text-xs sm:text-sm mt-1">{formErrors.phone}</p>}
              </div>

              <div className="relative">
                <MapPin className="absolute left-3 top-4 transform -translate-y-1/2 text-gray-400" size={18} />
                <textarea
                  name="address"
                  placeholder="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏"
                  value={orderFormData.address}
                  onChange={handleFormChange}
                  rows="3"
                  className={`w-full pl-10 pr-4 py-2 sm:py-3 rounded-lg border-2 text-base sm:text-lg ${formErrors.address ? 'border-red-500' : 'border-gray-300'} focus:outline-none focus:border-green-500 transition duration-200 resize-none`}
                ></textarea>
                {formErrors.address && <p className="text-red-500 text-xs sm:text-sm mt-1">{formErrors.address}</p>}
              </div>

              {/* –ü–æ–ª–µ –¥–ª—è –ø—Ä–∏–º–µ—á–∞–Ω–∏–π */}
              <div className="relative">
                <NotebookPen className="absolute left-3 top-4 transform -translate-y-1/2 text-gray-400" size={18} />
                <textarea
                  name="notes"
                  placeholder="–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∫ –∑–∞–∫–∞–∑—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: —É–∫–∞–∂–∏—Ç–µ —Å–æ—Ä—Ç —è–±–ª–æ–∫, –¥–æ–º–æ—Ñ–æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç )"
                  value={orderFormData.notes}
                  onChange={handleFormChange}
                  rows="3"
                  className="w-full pl-10 pr-4 py-2 sm:py-3 rounded-lg border-2 border-gray-300 focus:outline-none focus:border-green-500 transition duration-200 resize-none text-base sm:text-lg"
                ></textarea>
              </div>
            </div>

            <button
              onClick={submitOrder}
              className="w-full mt-6 sm:mt-8 py-3 sm:py-4 bg-green-600 text-white font-black rounded-lg shadow-lg hover:bg-green-700 transition duration-300 flex items-center justify-center text-lg sm:text-xl border-b-4 border-green-800 active:border-b-0 active:translate-y-1"
            >
              –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ó–∞–∫–∞–∑ <Package size={20} className="ml-1 sm:ml-2" />
            </button>
          </div>
        </div>
      )}
    </div>
  );
}